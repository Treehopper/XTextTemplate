/*
* generated by Xtext
*/
grammar InternalJSON;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package eu.hohenegger.template.parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eu.hohenegger.template.parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import eu.hohenegger.template.parser.services.JSONGrammarAccess;

}

@parser::members {
 
 	private JSONGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JSONGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRoot
entryRuleRoot 
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootAccess().getContentAssignment()); }
(rule__Root__ContentAssignment)
{ after(grammarAccess.getRootAccess().getContentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJObject
entryRuleJObject 
:
{ before(grammarAccess.getJObjectRule()); }
	 ruleJObject
{ after(grammarAccess.getJObjectRule()); } 
	 EOF 
;

// Rule JObject
ruleJObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJObjectAccess().getGroup()); }
(rule__JObject__Group__0)
{ after(grammarAccess.getJObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntry
entryRuleEntry 
:
{ before(grammarAccess.getEntryRule()); }
	 ruleEntry
{ after(grammarAccess.getEntryRule()); } 
	 EOF 
;

// Rule Entry
ruleEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntryAccess().getGroup()); }
(rule__Entry__Group__0)
{ after(grammarAccess.getEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJTerminal
entryRuleJTerminal 
:
{ before(grammarAccess.getJTerminalRule()); }
	 ruleJTerminal
{ after(grammarAccess.getJTerminalRule()); } 
	 EOF 
;

// Rule JTerminal
ruleJTerminal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJTerminalAccess().getAlternatives()); }
(rule__JTerminal__Alternatives)
{ after(grammarAccess.getJTerminalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
(rule__Boolean__Alternatives)
{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNull
entryRuleNull 
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullAccess().getNullKeyword()); }

	'null' 

{ after(grammarAccess.getNullAccess().getNullKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getJObjectParserRuleCall_0()); }
	ruleJObject
{ after(grammarAccess.getValueAccess().getJObjectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getArrayParserRuleCall_1()); }
	ruleArray
{ after(grammarAccess.getValueAccess().getArrayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getJTerminalParserRuleCall_2()); }
	ruleJTerminal
{ after(grammarAccess.getValueAccess().getJTerminalParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JTerminal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJTerminalAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getJTerminalAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJTerminalAccess().getBooleanParserRuleCall_1()); }
	ruleBoolean
{ after(grammarAccess.getJTerminalAccess().getBooleanParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getJTerminalAccess().getNUMBERTerminalRuleCall_2()); }
	RULE_NUMBER
{ after(grammarAccess.getJTerminalAccess().getNUMBERTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getJTerminalAccess().getNullParserRuleCall_3()); }
	ruleNull
{ after(grammarAccess.getJTerminalAccess().getNullParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__JObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group__0__Impl
	rule__JObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getJObjectAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group__1__Impl
	rule__JObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getJObjectAction_1()); }
(

)
{ after(grammarAccess.getJObjectAccess().getJObjectAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group__2__Impl
	rule__JObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getEntriesAssignment_2()); }
(rule__JObject__EntriesAssignment_2)?
{ after(grammarAccess.getJObjectAccess().getEntriesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group__3__Impl
	rule__JObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getGroup_3()); }
(rule__JObject__Group_3__0)*
{ after(grammarAccess.getJObjectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getJObjectAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JObject__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group_3__0__Impl
	rule__JObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getJObjectAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JObject__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getEntriesAssignment_3_1()); }
(rule__JObject__EntriesAssignment_3_1)
{ after(grammarAccess.getJObjectAccess().getEntriesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__0__Impl
	rule__Entry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getKeyAssignment_0()); }
(rule__Entry__KeyAssignment_0)
{ after(grammarAccess.getEntryAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__1__Impl
	rule__Entry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getEntryAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getValueAssignment_2()); }
(rule__Entry__ValueAssignment_2)
{ after(grammarAccess.getEntryAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_1()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
(rule__Array__ValuesAssignment_2)?
{ after(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
	rule__Array__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_3()); }
(rule__Array__Group_3__0)*
{ after(grammarAccess.getArrayAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__0__Impl
	rule__Array__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
(rule__Array__ValuesAssignment_3_1)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Root__ContentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getContentJObjectParserRuleCall_0()); }
	ruleJObject{ after(grammarAccess.getRootAccess().getContentJObjectParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__EntriesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getEntriesEntryParserRuleCall_2_0()); }
	ruleEntry{ after(grammarAccess.getJObjectAccess().getEntriesEntryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JObject__EntriesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJObjectAccess().getEntriesEntryParserRuleCall_3_1_0()); }
	ruleEntry{ after(grammarAccess.getJObjectAccess().getEntriesEntryParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getEntryAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_3_1_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : '-'? RULE_INT? '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_WS : (' '|'\t'|'\r'|'\n')+;


