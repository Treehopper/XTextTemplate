@Ecore(nsURI="http://www.hohenegger.eu/template/parser/JSON")
@GenModel(editDirectory="/eu.hohenegger.template.edit/xcore-gen")
@GenModel(modelDirectory="/eu.hohenegger.template.model/xcore-gen")
@GenModel(testsDirectory="/eu.hohenegger.template.test/xcore-gen", generateExampleClass="false")
@GenModel(editPluginID="eu.hohenegger.template.edit")
@GenModel(testsPluginID="eu.hohenegger.template.test")
@GenModel(complianceLevel="7.0", runtimeVersion="2.9")
@GenModel(modelPluginVariables="org.eclipse.xtext.xbase.lib org.eclipse.emf.ecore.xcore.lib")
@GenModel(forceOverwrite="false")
@GenModel(fileExtensions="json", updateClasspath="false")
package eu.hohenegger.template.json.model

interface Node {}

class JObject extends Node {
	contains Entry[] entries
	
	op Entry getValue(String key) {
		entries.findFirst[e | key.equals(e.key)]
	}
}

class Entry {
	String key
	contains Value content

	derived Object value get {
		if(content == null) 
			null
		else 
			content.value
	}

	derived Object child get {
		if(content == null) 
			null
		else 
			content.child
	}
}

class Value {
	contains Node child
	Object value
}

class Array extends Node {
	contains Value[] values
	
	op Object getValue(int index) {
		values.get(index).value
	}
}